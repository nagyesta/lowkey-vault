# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI-PR

on:
  push:
    branches: [ main ]
    paths:
      - 'gradle/libs.versions.toml'
      - 'gradle/verification-metadata.xml'
      - 'lowkey-vault-docker/src/docker/Dockerfile'
      - 'gradle/wrapper/gradle-wrapper.properties'
      - 'config/ossindex/exclusions.txt'
      - '.github/workflows/gradle-ci.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**/README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'pull_request_template.md'
      - '.lift/.toml'
      - '**/.lift/.toml'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/assets/**'
      - '.github/workflows/**'
      - '!.github/workflows/gradle-ci.yml'
      - '.github/pr-labeler.yml'
      - 'renovate.json'
      - '.whitesource'
      - 'gradle/libs.versions.toml'
      - 'config/ossindex/exclusions.txt'

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Set up build environment
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          distribution: temurin
          java-version: 17
      - name: Decode key
        run: |
          mkdir -p ${{ runner.temp }}/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ${{ runner.temp }}/.gnupg/secring.gpg
      - name: Build with Gradle
        uses: gradle/gradle-build-action@a8f75513eafdebd8141bd1cd4e30fcd194af8dfa # v2.12.0
        with:
          arguments: |
            printVersion build sign
            -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
            -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
            -Psigning.secretKeyRingFile=${{ runner.temp }}/.gnupg/secring.gpg
      - name: 'Clean-up GPG key'
        if: always()
        run: |
          rm -rf ${{ runner.temp }}/.gnupg/
      - name: 'Upload Test reports - App'
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        with:
          name: test-report-lowkey-vault-app
          path: |
            lowkey-vault-app/build/reports/tests/test
            lowkey-vault-app/build/reports/abort-mission/abort-mission-report.html
          retention-days: 5
      - name: 'Upload Test reports - Docker'
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        with:
          name: test-report-lowkey-vault-docker
          path: |
            lowkey-vault-docker/build/reports/cucumber
            lowkey-vault-docker/build/reports/abort-mission/abort-mission-report.html
          retention-days: 5
      - name: 'Upload Test reports - Testcontainers'
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        with:
          name: test-report-lowkey-vault-testcontainers
          path: lowkey-vault-testcontainers/build/reports/tests/test
          retention-days: 5
      - name: Upload coverage to Codecov - App
        uses: codecov/codecov-action@4fe8c5f003fae66aa5ebb77cfd3e7bfbbda0b6b0 # v3.1.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lowkey-vault-app/build/reports/jacoco/report.xml
          flags: app
      - name: Upload coverage to Codecov - Client
        uses: codecov/codecov-action@4fe8c5f003fae66aa5ebb77cfd3e7bfbbda0b6b0 # v3.1.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lowkey-vault-client/build/reports/jacoco/report.xml
          flags: client
      - name: Upload coverage to Codecov - Testcontainers
        uses: codecov/codecov-action@4fe8c5f003fae66aa5ebb77cfd3e7bfbbda0b6b0 # v3.1.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lowkey-vault-testcontainers/build/reports/jacoco/report.xml
          flags: testcontainers
