# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**/README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'pull_request_template.md'
      - '.lift/.toml'
      - '**/.lift/.toml'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/assets/**'
      - '.github/workflows/**'
      - '.github/pr-labeler.yml'
      - 'renovate.json'
      - '.whitesource'
      - 'gradle/libs.versions.toml'
      - 'gradle/verification-metadata.xml'
      - 'gradle/verification-metadata-clean.xml'
      - 'lowkey-vault-docker/src/docker/Dockerfile'
      - 'gradle/wrapper/gradle-wrapper.properties'
      - 'gradle/wrapper/gradle-wrapper.jar'
      - 'gradlew'
      - 'gradlew.bat'
      - 'config/ossindex/exclusions.txt'

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Set up build environment
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          fetch-depth: 0
          token: ${{ secrets.PUBLISH_KEY }}
      - name: Set up JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3.3.2
        with:
          gradle-home-cache-cleanup: true
      - name: Build with Gradle
        run: ./gradlew tagVersion build -PgithubUser=${{ secrets.PUBLISH_USER_NAME }} -PgithubToken=${{ secrets.PUBLISH_KEY }}
      - name: Decode key
        run: |
          mkdir -p ${{ runner.temp }}/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ${{ runner.temp }}/.gnupg/secring.gpg
      - name: Docker Login
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build with Gradle
        run: >
          ./gradlew publish  publishToSonatype closeAndReleaseSonatypeStagingRepository
          -x test -x dockerClean -x dockerPrepare -x dockerRun -x dockerRunStatus -x dockerStop
          -PgithubUser=${{ secrets.PUBLISH_USER_NAME }}
          -PgithubToken=${{ secrets.PUBLISH_KEY }}
          -PossrhUsername=${{ secrets.OSSRH_USER }}
          -PossrhPassword=${{ secrets.OSSRH_PASS }}
          -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
          -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          -Psigning.secretKeyRingFile=${{ runner.temp }}/.gnupg/secring.gpg
      - name: Clean-up GPG key
        if: always()
        run: |
          rm -rf ${{ runner.temp }}/.gnupg/
      - name: Upload coverage to Codecov - App
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # v4.4.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lowkey-vault-app/build/reports/jacoco/report.xml
          flags: app
      - name: Upload coverage to Codecov - Client
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # v4.4.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lowkey-vault-client/build/reports/jacoco/report.xml
          flags: client
      - name: Upload coverage to Codecov - Testcontainers
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # v4.4.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lowkey-vault-testcontainers/build/reports/jacoco/report.xml
          flags: testcontainers
