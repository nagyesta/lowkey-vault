[versions]
springBoot = "3.2.3"
spring = "6.1.5"
snakeYaml = "2.2"
tomcat = "10.1.19"
logback = "1.5.3"
bouncycastle = "1.77"
hibernateValidator = "8.0.1.Final"
findbugs = "3.0.2"
lombok = "1.18.30"
handlebars="4.4.0"
httpClient = "4.5.14"
commonsCodec = "1.16.1"
azureKeyVaultClient = "4.8.0"
azureKeyVaultCertClient = "4.6.0"
testcontainers = "1.19.7"
cucumber = "7.15.0"
mockitoCore = "5.11.0"
jupiter = "5.10.2"
abortMission = "5.0.58"
checkstyle = "10.12.2"
jacoco = "0.8.10"
jacksonBom = { strictly = "2.17.0" }
jackson = { strictly = "2.17.0" }
openApiUi = "2.4.0"

abortMissionPlugin = "5.0.10"
dockerPlugin = "0.36.0"
indexScanPlugin = "2.7.0"
lombokPlugin = "8.6"
springBootPlugin = "3.2.3"
gitVersionerPlugin = "1.6.7"
owaspPlugin = "9.0.10"

[libraries]
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "springBoot" }
spring-boot-starter-json = { module = "org.springframework.boot:spring-boot-starter-json", version.ref = "springBoot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
spring-boot-starter-tomcat = { module = "org.springframework.boot:spring-boot-starter-tomcat", version.ref = "springBoot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "springBoot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "openApiUi" }
spring-core = { module = "org.springframework:spring-core", version.ref = "spring" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring" }

snake-yaml = { module = "org.yaml:snakeyaml", version.ref = "snakeYaml" }

tomcat-annotations-api = { module = "org.apache.tomcat:tomcat-annotations-api", version.ref = "tomcat" }
tomcat-jsp-api = { module = "org.apache.tomcat:tomcat-jsp-api", version.ref = "tomcat" }
tomcat-embed-core = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat" }
tomcat-embed-el = { module = "org.apache.tomcat.embed:tomcat-embed-el", version.ref = "tomcat" }
tomcat-embed-jasper = { module = "org.apache.tomcat.embed:tomcat-embed-jasper", version.ref = "tomcat" }
tomcat-embed-websocket = { module = "org.apache.tomcat.embed:tomcat-embed-websocket", version.ref = "tomcat" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }

handlebars = { module = "com.github.jknack:handlebars", version.ref = "handlebars" }

bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncycastle" }

hibernate-validator = { module = "org.hibernate:hibernate-validator", version.ref = "hibernateValidator" }

findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }

httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "httpClient" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }

azure-security-keyvault-secrets = { module = "com.azure:azure-security-keyvault-secrets", version.ref = "azureKeyVaultClient" }
azure-security-keyvault-keys = { module = "com.azure:azure-security-keyvault-keys", version.ref = "azureKeyVaultClient" }
azure-security-keyvault-certificates = { module = "com.azure:azure-security-keyvault-certificates", version.ref = "azureKeyVaultCertClient" }

lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter" }

abort-mission-jupiter = { module = "com.github.nagyesta.abort-mission.boosters:abort.booster-junit-jupiter", version.ref = "abortMission" }
abort-mission-cucumber = { module = "com.github.nagyesta.abort-mission.boosters:abort.booster-cucumber-jvm", version.ref = "abortMission" }

cucumber-java = { module = "io.cucumber:cucumber-java", version.ref = "cucumber" }
cucumber-testng = { module = "io.cucumber:cucumber-testng", version.ref = "cucumber" }
cucumber-picocontainer = { module = "io.cucumber:cucumber-picocontainer", version.ref = "cucumber" }

jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jacksonBom" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

[bundles]
spring-boot-app = [
    "spring-boot-starter", "spring-boot-starter-json", "spring-boot-starter-web", "spring-boot-starter-tomcat",
    "spring-boot-starter-validation", "spring-core", "spring-context", "spring-web", "spring-webmvc", "snake-yaml"
]
spring-test = ["spring-boot-starter-test", "spring-test", "snake-yaml"]
logback = ["logback-classic", "logback-core"]
cucumber = ["cucumber-java", "cucumber-testng", "cucumber-picocontainer"]
jackson = ["jackson-core", "jackson-annotations", "jackson-databind", "jackson-dataformat-xml", "jackson-datatype-jsr310"]
tomcat = [
    "tomcat-annotations-api", "tomcat-jsp-api", "tomcat-embed-core", "tomcat-embed-el", "tomcat-embed-jasper", "tomcat-embed-websocket"
]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBootPlugin" }
lombok = { id = "io.freefair.lombok", version.ref = "lombokPlugin" }
abort-mission = { id = "com.github.nagyesta.abort-mission-gradle-plugin", version.ref = "abortMissionPlugin" }
docker = { id = "com.palantir.docker", version.ref = "dockerPlugin" }
docker-run = { id = "com.palantir.docker-run", version.ref = "dockerPlugin" }
versioner = { id = "io.toolebox.git-versioner", version.ref = "gitVersionerPlugin" }
index-scan = { id = "org.sonatype.gradle.plugins.scan", version.ref = "indexScanPlugin" }
owasp-dependencycheck = { id = "org.owasp.dependencycheck", version.ref = "owaspPlugin" }
