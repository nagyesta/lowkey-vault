plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'java'
    //noinspection SpellCheckingInspection
    id "io.freefair.lombok" version '6.2.0'
    id 'org.sonatype.gradle.plugins.scan' version '2.2.0'
    id 'com.github.nagyesta.abort-mission-gradle-plugin' version '2.0.2'
}

group = "${rootProject.group}"

project.ext {
    artifactDisplayName = "Lowkey Vault - App"
    artifactDescription = "Assembled application of Lowkey Vault."
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${rootProject.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-json:${rootProject.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${rootProject.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-tomcat:${rootProject.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${rootProject.ext.springBootVersion}"
    implementation "org.bouncycastle:bcpkix-jdk15on:${rootProject.ext.bouncyCastleVersion}"
    implementation "org.hibernate:hibernate-validator:${rootProject.ext.hibernateVersion}"
    implementation "com.google.code.findbugs:jsr305:${rootProject.ext.findBugsVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${rootProject.ext.springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${rootProject.ext.springBootVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${rootProject.ext.jupiterVersion}"
    testImplementation "com.github.nagyesta.abort-mission.boosters:abort.booster-junit-jupiter:${rootProject.ext.abortMissionVersion}"
}

test {
    useJUnitPlatform()
    systemProperty("junit.jupiter.extensions.autodetection.enabled", true)
}

abortMission {
    toolVersion rootProject.ext.abortMissionVersion
}

jar {
    enabled = false
}

task regenerateCert(type:Exec) {
    outputs.file("${project.projectDir}/src/main/resources/cert/keystore.p12")
    workingDir file("${project.projectDir}/src/main/resources/cert")

    //on windows:
    commandLine 'keytool',
            '-genkeypair',
            '-alias', 'lowkey-vault.local',
            '-keyalg', 'RSA',
            '-keysize', '4096',
            '-validity', '3650',
            '-dname', 'CN=lowkey-vault.local',
            '-keypass', 'changeit',
            '-keystore', 'keystore.p12',
            '-storeType', 'PKCS12',
            '-storepass', 'changeit',
            '-ext', 'SAN=dns:default.lowkey-vault.local,dns:default.lowkey-vault,dns:lowkey-vault.local,dns:lowkey-vault,dns:localhost'

    logging.captureStandardOutput LogLevel.INFO
    logging.captureStandardError  LogLevel.ERROR
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact bootJar
            artifactId = "${project.name}"
            pom {
                name = "${project.artifactDisplayName}"
                description = "${project.artifactDescription}"
                url = rootProject.ext.repoUrl
                packaging = "jar"
                licenses {
                    license {
                        name = rootProject.ext.licenseName
                        url = rootProject.ext.licenseUrl
                    }
                }
                developers {
                    developer {
                        id = rootProject.ext.maintainerId
                        name = rootProject.ext.maintainerName
                        url = rootProject.ext.maintainerUrl
                    }
                }
                scm {
                    connection = rootProject.ext.scmConnection
                    developerConnection = rootProject.ext.scmConnection
                    url = rootProject.ext.scmProjectUrl
                }
                withXml {
                    asNode().dependencies.findAll() {
                        def parent = it.parent()
                        parent.remove(it)
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
